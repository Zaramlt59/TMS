openapi: 3.0.0
info:
  title: Authentication System
  description: Comprehensive authentication system including regular login and OTP-based authentication
  version: 1.0.0
  contact:
    name: TMS API Support
    email: support@tms.gov.in

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: OTP Authentication
    description: OTP-based authentication for teachers

paths:
  /api/users/login:
    post:
      tags:
        - Authentication
      summary: User login with username and password
      description: Authenticates users with username and password credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username or email
                  example: "admin"
                password:
                  type: string
                  description: User password
                  example: "admin123"
                  minLength: 6
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login successful"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: JWT authentication token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      user:
                        $ref: '#/components/schemas/User'
                      csrf:
                        type: string
                        description: CSRF token
                        example: "csrf-token-123"
        '400':
          description: Bad request - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Account deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests - Account locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Logs out the current user and invalidates the session
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logout successful"
        '401':
          description: Unauthorized - No valid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/me:
    get:
      tags:
        - Authentication
      summary: Get current user profile
      description: Retrieves the current authenticated user's profile information
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/refresh-token:
    post:
      tags:
        - Authentication
      summary: Refresh authentication token
      description: Refreshes the JWT token for the current user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: New JWT authentication token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Unauthorized - Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Sends a password reset link to the user's email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: "user@tms.gov.in"
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password reset email sent"
        '400':
          description: Bad request - Invalid email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password with token
      description: Resets the user's password using a valid reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                  description: Password reset token
                  example: "reset-token-123"
                password:
                  type: string
                  description: New password
                  example: "newpassword123"
                  minLength: 6
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password reset successfully"
        '400':
          description: Bad request - Invalid token or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/otp-auth/send-otp:
    post:
      tags:
        - OTP Authentication
      summary: Send OTP to phone number
      description: Sends a 6-digit OTP to the provided phone number for teacher authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  description: Phone number to send OTP to
                  example: "6909701606"
                  pattern: "^[0-9]{10}$"
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP sent successfully"
        '400':
          description: Bad request - Invalid phone number or user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/otp-auth/verify-otp:
    post:
      tags:
        - OTP Authentication
      summary: Verify OTP and login
      description: Verifies the provided OTP and logs in the teacher user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - otp
              properties:
                phone:
                  type: string
                  description: Phone number used for OTP
                  example: "6909701606"
                otp:
                  type: string
                  description: 6-digit OTP code
                  example: "123456"
                  pattern: "^[0-9]{6}$"
      responses:
        '200':
          description: OTP verified successfully and user logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login successful"
                  token:
                    type: string
                    description: JWT authentication token
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Bad request - Invalid OTP or expired OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: OTP not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/otp-auth/resend-otp:
    post:
      tags:
        - OTP Authentication
      summary: Resend OTP
      description: Resends OTP to the same phone number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  description: Phone number to resend OTP to
                  example: "6909701606"
      responses:
        '200':
          description: OTP resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP resent successfully"
        '400':
          description: Bad request - Invalid phone number or no existing OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests - Rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: Unique user identifier
          example: 1
        username:
          type: string
          description: Username
          example: "teacher"
        email:
          type: string
          description: Email address
          example: "teacher@tms.gov.in"
        phone:
          type: string
          description: Phone number
          example: "6909701606"
        role:
          type: string
          enum: [super_admin, admin, deo, sdeo, hoi, teacher]
          description: User role
          example: "teacher"
        is_active:
          type: boolean
          description: Whether user account is active
          example: true
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
          example: "2024-01-15T10:30:00Z"
      required:
        - id
        - username
        - email
        - role
        - is_active
        - created_at

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: Error message
          example: "An error occurred"
        error:
          type: string
          description: Detailed error information (development only)
          example: "Database connection failed"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login or OTP verification

security:
  - BearerAuth: []

  examples:
    LoginSuccessExample:
      summary: Successful Login Response
      description: Example of a successful login response
      value:
        success: true
        message: "Login successful"
        data:
          token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NDIyMzQ1NjcsImV4cCI6MTY0MjMyMDk2N30.example"
          user:
            id: 1
            username: "admin"
            email: "admin@tms.gov.in"
            phone: "9876543210"
            role: "admin"
            is_active: true
            created_at: "2024-01-15T10:30:00Z"
          csrf: "csrf-token-123"

    OTPLoginSuccessExample:
      summary: Successful OTP Login Response
      description: Example of a successful OTP login response
      value:
        success: true
        message: "Login successful"
        token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsInVzZXJuYW1lIjoidGVhY2hlciIsInJvbGUiOiJ0ZWFjaGVyIiwiaWF0IjoxNjQyMjM0NTY3LCJleHAiOjE2NDIzMjA5Njd9.example"
        user:
          id: 2
          username: "teacher"
          email: "teacher@tms.gov.in"
          phone: "6909701606"
          role: "teacher"
          is_active: true
          created_at: "2024-01-15T10:30:00Z"

    ErrorExample:
      summary: Error Response Example
      description: Example of an error response
      value:
        success: false
        message: "Invalid credentials"
        error: "Username or password is incorrect"
