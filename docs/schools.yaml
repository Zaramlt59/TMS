openapi: 3.0.0
info:
  title: Schools API
  version: 1.0.0
tags:
  - name: Schools
paths:
  /api/schools:
    get:
      tags: [Schools]
      summary: List schools
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/SchoolsListResponse'
    post:
      tags: [Schools]
      summary: Create school
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/School'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/SchoolResponse'
  /api/schools/{id}:
    get:
      tags: [Schools]
      summary: Get school by ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/SchoolResponse'
    put:
      tags: [Schools]
      summary: Update school by ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: './components.yaml#/components/schemas/School' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/SchoolResponse'
    delete:
      tags: [Schools]
      summary: Delete school by ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
  /api/schools/search:
    get:
      tags: [Schools]
      summary: Search schools
      parameters:
        - in: query
          name: q
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
  /api/schools/stats:
    get:
      tags: [Schools]
      summary: School statistics
      responses:
        '200': { description: OK }


